$date
	Wed May 27 13:27:52 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BancoPruebasDemuxL1 $end
$var wire 1 ! validout3 $end
$var wire 1 " validout2 $end
$var wire 1 # validout1 $end
$var wire 1 $ validout0 $end
$var wire 1 % valid2 $end
$var wire 1 & valid1 $end
$var wire 1 ' selectorL1 $end
$var wire 1 ( reset_L $end
$var wire 8 ) dataout3_demuxL1 [7:0] $end
$var wire 8 * dataout2_demuxL1 [7:0] $end
$var wire 8 + dataout1_demuxL1 [7:0] $end
$var wire 8 , dataout0_demuxL1 [7:0] $end
$var wire 8 - data_in1_demuxL1 [7:0] $end
$var wire 8 . data_in0_demuxL1 [7:0] $end
$var wire 1 / clk_4f $end
$var wire 1 0 clk_2f $end
$var wire 1 1 clk $end
$scope module demuxL1 $end
$var wire 1 ! validout3 $end
$var wire 1 " validout2 $end
$var wire 1 # validout1 $end
$var wire 1 $ validout0 $end
$var wire 1 % valid2 $end
$var wire 1 & valid1 $end
$var wire 1 ' selectorL1 $end
$var wire 1 ( reset_L $end
$var wire 8 2 dataout3_demuxL1 [7:0] $end
$var wire 8 3 dataout2_demuxL1 [7:0] $end
$var wire 8 4 dataout1_demuxL1 [7:0] $end
$var wire 8 5 dataout0_demuxL1 [7:0] $end
$var wire 8 6 data_in1_demuxL1 [7:0] $end
$var wire 8 7 data_in0_demuxL1 [7:0] $end
$var wire 1 1 clk $end
$scope module demux1a2_8bitdosL2 $end
$var wire 1 ! validout1 $end
$var wire 1 " validout0 $end
$var wire 1 % valid $end
$var wire 1 8 temp1 $end
$var wire 1 9 temp0 $end
$var wire 1 1 selector $end
$var wire 1 ( reset_L $end
$var wire 8 : dataout_demux1a2dosbits1 [7:0] $end
$var wire 8 ; dataout_demux1a2dosbits0 [7:0] $end
$var wire 8 < data_in [7:0] $end
$scope module demux1a2ochobits_dos $end
$var wire 4 = data_in [3:0] $end
$var wire 1 % valid $end
$var wire 1 1 selector $end
$var wire 1 ( reset_L $end
$var reg 4 > dataout_demux1a2dosbits0 [3:0] $end
$var reg 4 ? dataout_demux1a2dosbits1 [3:0] $end
$var reg 4 @ temp1 [3:0] $end
$var reg 4 A temp2 [3:0] $end
$var reg 1 9 validout0 $end
$var reg 1 8 validout1 $end
$upscope $end
$scope module demux1a2ochobits_uno $end
$var wire 4 B data_in [3:0] $end
$var wire 1 % valid $end
$var wire 1 1 selector $end
$var wire 1 ( reset_L $end
$var reg 4 C dataout_demux1a2dosbits0 [3:0] $end
$var reg 4 D dataout_demux1a2dosbits1 [3:0] $end
$var reg 4 E temp1 [3:0] $end
$var reg 4 F temp2 [3:0] $end
$var reg 1 " validout0 $end
$var reg 1 ! validout1 $end
$upscope $end
$upscope $end
$scope module demux1a2_8bitunoL2 $end
$var wire 1 # validout1 $end
$var wire 1 $ validout0 $end
$var wire 1 & valid $end
$var wire 1 G temp1 $end
$var wire 1 H temp0 $end
$var wire 1 1 selector $end
$var wire 1 ( reset_L $end
$var wire 8 I dataout_demux1a2dosbits1 [7:0] $end
$var wire 8 J dataout_demux1a2dosbits0 [7:0] $end
$var wire 8 K data_in [7:0] $end
$scope module demux1a2ochobits_dos $end
$var wire 4 L data_in [3:0] $end
$var wire 1 & valid $end
$var wire 1 1 selector $end
$var wire 1 ( reset_L $end
$var reg 4 M dataout_demux1a2dosbits0 [3:0] $end
$var reg 4 N dataout_demux1a2dosbits1 [3:0] $end
$var reg 4 O temp1 [3:0] $end
$var reg 4 P temp2 [3:0] $end
$var reg 1 H validout0 $end
$var reg 1 G validout1 $end
$upscope $end
$scope module demux1a2ochobits_uno $end
$var wire 4 Q data_in [3:0] $end
$var wire 1 & valid $end
$var wire 1 1 selector $end
$var wire 1 ( reset_L $end
$var reg 4 R dataout_demux1a2dosbits0 [3:0] $end
$var reg 4 S dataout_demux1a2dosbits1 [3:0] $end
$var reg 4 T temp1 [3:0] $end
$var reg 4 U temp2 [3:0] $end
$var reg 1 $ validout0 $end
$var reg 1 # validout1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module prueba $end
$var wire 8 V dataout0_demuxL1 [7:0] $end
$var wire 8 W dataout1_demuxL1 [7:0] $end
$var wire 8 X dataout2_demuxL1 [7:0] $end
$var wire 8 Y dataout3_demuxL1 [7:0] $end
$var wire 1 $ validout0 $end
$var wire 1 # validout1 $end
$var wire 1 " validout2 $end
$var wire 1 ! validout3 $end
$var reg 1 1 clk $end
$var reg 1 0 clk_2f $end
$var reg 1 / clk_4f $end
$var reg 8 Z data_in0_demuxL1 [7:0] $end
$var reg 8 [ data_in1_demuxL1 [7:0] $end
$var reg 1 ( reset_L $end
$var reg 1 ' selectorL1 $end
$var reg 1 & valid1 $end
$var reg 1 % valid2 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
1H
0G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
19
08
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
01
10
1/
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
1'
1&
1%
1$
0#
1"
0!
$end
#75
0/
#150
1/
00
#225
0/
#300
1(
09
18
0"
1!
0H
1G
0$
1#
1/
10
11
#375
0/
#450
1/
00
#525
0/
#600
b1000 *
b1000 3
b1000 ;
b1000 X
b1000 C
b1000 F
b1000 E
b1 O
b1000 B
b1 L
b1000 -
b1000 6
b1000 <
b1000 [
b10000 .
b10000 7
b10000 K
b10000 Z
0&
19
1"
0H
0$
1/
10
01
#675
0/
#750
1/
00
#825
0/
#900
b1 ?
b1111 S
b1 A
b1111 U
b1 @
b1111 T
b11111 +
b11111 4
b11111 I
b11111 W
b1 N
b1 =
b1 B
b1111 Q
b1 P
b10001 -
b10001 6
b10001 <
b10001 [
b11111 .
b11111 7
b11111 K
b11111 Z
1&
b10001 )
b10001 2
b10001 :
b10001 Y
b1 D
b1 F
b1 E
1G
b1 O
1#
1/
10
11
#975
0/
#1050
1/
00
#1125
0/
#1200
b0 =
b1001 B
b10 L
b11 Q
b1001 -
b1001 6
b1001 <
b1001 [
b100011 .
b100011 7
b100011 K
b100011 Z
b0 >
b10 M
b100011 ,
b100011 5
b100011 J
b100011 V
b11 R
b0 A
b0 @
b1001 *
b1001 3
b1001 ;
b1001 X
b1001 C
b1001 F
b1001 E
1H
b10 P
b10 O
1$
b11 U
b11 T
1/
10
01
#1275
0/
#1350
1/
00
#1425
0/
#1500
b1101 Q
b101101 .
b101101 7
b101101 K
b101101 Z
b0 ?
b1001 )
b1001 2
b1001 :
b1001 Y
b1001 D
b1001 F
b1001 E
b10 N
b10 P
b10 O
b101101 +
b101101 4
b101101 I
b101101 W
b1101 S
b1101 U
b1101 T
1/
10
11
#1575
0/
#1650
1/
00
#1725
0/
#1800
b1111 B
b11 L
b100 Q
0H
0$
b1111 -
b1111 6
b1111 <
b1111 [
b110100 .
b110100 7
b110100 K
b110100 Z
0&
b1111 *
b1111 3
b1111 ;
b1111 X
b1111 C
b1111 F
b1111 E
b0 M
b0 P
b11 O
b0 ,
b0 5
b0 J
b0 V
b0 R
b0 U
b100 T
1/
10
01
#1875
0/
#1950
1/
00
#2025
0/
#2100
b1 @
b1 =
b100 B
b1110 Q
08
0!
b10100 -
b10100 6
b10100 <
b10100 [
b111110 .
b111110 7
b111110 K
b111110 Z
0%
b0 )
b0 2
b0 :
b0 Y
b0 D
b0 F
b100 E
b0 N
0G
b11 O
b0 +
b0 4
b0 I
b0 W
b0 S
0#
b1110 T
1/
10
11
#2175
0/
#2250
1/
00
#2325
0/
#2400
b100 M
b1001100 ,
b1001100 5
b1001100 J
b1001100 V
b1100 R
b10 =
b0 B
b100 L
b1100 Q
b100 P
1H
b1100 U
1$
b100000 -
b100000 6
b100000 <
b100000 [
b1001100 .
b1001100 7
b1001100 K
b1001100 Z
1&
09
b10 @
b0 *
b0 3
b0 ;
b0 X
b0 C
0"
b0 E
b100 O
b1100 T
1/
10
01
#2475
0/
#2550
1/
00
#2625
0/
#2700
b100 D
b100 F
b100 E
b100100 )
b100100 2
b100100 :
b100100 Y
b10 ?
b100 B
b1101 Q
b10 A
18
1!
b100100 -
b100100 6
b100100 <
b100100 [
b1001101 .
b1001101 7
b1001101 K
b1001101 Z
1%
b100 N
b1001101 +
b1001101 4
b1001101 I
b1001101 W
b1101 S
b10 @
1G
b100 P
b100 O
1#
b1101 U
b1101 T
1/
10
11
#2775
0/
#2850
1/
00
#2925
0/
#3000
b111 B
b101 L
b1 Q
b100111 -
b100111 6
b100111 <
b100111 [
b1010001 .
b1010001 7
b1010001 K
b1010001 Z
b10 >
b100111 *
b100111 3
b100111 ;
b100111 X
b111 C
19
b10 A
b10 @
1"
b111 F
b111 E
b101 M
b101 P
b101 O
b1010001 ,
b1010001 5
b1010001 J
b1010001 V
b1 R
b1 U
b1 T
1/
10
01
#3075
0/
#3150
1/
00
#3225
0/
#3300
b10 ?
b10 A
b10 @
b100111 )
b100111 2
b100111 :
b100111 Y
b111 D
b111 F
b111 E
b101 N
b101 P
b101 O
b1010001 +
b1010001 4
b1010001 I
b1010001 W
b1 S
b1 U
b1 T
1/
10
11
